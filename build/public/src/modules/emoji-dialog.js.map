{"version":3,"sources":["node_modules/nodebb-plugin-emoji/build/public/lib/emoji-dialog.js"],"names":["define","require","exports","translator_1","controls_1","scrollStop_1","emoji_1","Object","defineProperty","value","$html","$","dialogActions","open","dialog","addClass","close","removeClass","priorities","people","nature","food","activity","travel","objects","symbols","flags","regional","modifier","other","init","callback","Promise","all","getJSON","base","buster","then","_a","categoriesInfo","packs","categories","keys","map","category","emojis","name","table","emoji","html","buildEmoji","sort","a","b","aPriority","bPriority","window","templates","parse","result","translate","appendTo","find","click","e","preventDefault","target","tab","on","getAttribute","each","i","elem","$elem","src","attr","first","trigger","modal","backdrop","show","apply","draggable","handle","openForInsert","textarea","after","hasClass","off","currentTarget","text","selectionStart","selectionEnd","end","length","start","insertIntoTextarea","updateTextareaSelection","buttonRect","getBoundingClientRect","position","bottom","top","right","left","innerWidth","css"],"mappings":"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","file":"node_modules/nodebb-plugin-emoji/build/public/lib/emoji-dialog.js","sourcesContent":["/// <amd-module name=\"emoji-dialog\"/>\r\ndefine(\"emoji-dialog\", [\"require\", \"exports\", \"translator\", \"composer/controls\", \"scrollStop\", \"emoji\"], function (require, exports, translator_1, controls_1, scrollStop_1, emoji_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var $html = $('html');\r\n    var dialogActions = {\r\n        open: function (dialog) {\r\n            $html.addClass('emoji-insert');\r\n            return dialog.addClass('open');\r\n        },\r\n        close: function (dialog) {\r\n            $html.removeClass('emoji-insert');\r\n            return dialog.removeClass('open');\r\n        },\r\n    };\r\n    var priorities = {\r\n        people: 10,\r\n        nature: 9,\r\n        food: 8,\r\n        activity: 7,\r\n        travel: 6,\r\n        objects: 5,\r\n        symbols: 4,\r\n        flags: 3,\r\n        regional: 2,\r\n        modifier: 1,\r\n        other: 0,\r\n    };\r\n    // create modal\r\n    function init(callback) {\r\n        Promise.all([\r\n            $.getJSON(emoji_1.base + \"/emoji/categories.json?\" + emoji_1.buster),\r\n            $.getJSON(emoji_1.base + \"/emoji/packs.json?\" + emoji_1.buster),\r\n        ]).then(function (_a) {\r\n            var categoriesInfo = _a[0], packs = _a[1];\r\n            var categories = Object.keys(categoriesInfo).map(function (category) {\r\n                var emojis = categoriesInfo[category].map(function (name) { return emoji_1.table[name]; });\r\n                return {\r\n                    name: category,\r\n                    emojis: emojis.map(function (emoji) { return ({\r\n                        name: emoji.name,\r\n                        html: emoji_1.buildEmoji(emoji, true),\r\n                    }); }),\r\n                };\r\n            }).sort(function (a, b) {\r\n                var aPriority = priorities[a.name] || 0;\r\n                var bPriority = priorities[b.name] || 0;\r\n                return bPriority - aPriority;\r\n            });\r\n            window.templates.parse('partials/emoji-dialog', {\r\n                categories: categories,\r\n                packs: packs,\r\n            }, function (result) {\r\n                translator_1.translate(result, function (html) {\r\n                    var dialog = $(html).appendTo('body');\r\n                    dialog.find('.emoji-tabs .nav-tabs a').click(function (e) {\r\n                        e.preventDefault();\r\n                        $(e.target).tab('show');\r\n                    }).on('show.bs.tab', function (e) {\r\n                        $(e.target.getAttribute('href'))\r\n                            .find('.emoji-link img.defer')\r\n                            .removeClass('defer')\r\n                            .each(function (i, elem) {\r\n                            var $elem = $(elem);\r\n                            var src = $elem.attr('data-src');\r\n                            $elem.attr('src', src);\r\n                        });\r\n                    }).first().trigger('show.bs.tab');\r\n                    dialog.modal({\r\n                        backdrop: false,\r\n                        show: false,\r\n                    });\r\n                    scrollStop_1.apply(dialog.find('.tab-content')[0]);\r\n                    var close = function () { return dialogActions.close(dialog); };\r\n                    $(window).on('action:composer.discard action:composer.submit', close);\r\n                    dialog.find('.close').click(close);\r\n                    if (dialog.draggable) {\r\n                        dialog.draggable({\r\n                            handle: '.top-bar',\r\n                        });\r\n                    }\r\n                    callback(dialog);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    exports.init = init;\r\n    function openForInsert(textarea) {\r\n        function after(dialog) {\r\n            if (dialog.hasClass('open')) {\r\n                dialogActions.close(dialog);\r\n                return;\r\n            }\r\n            dialog.off('click').on('click', '.emoji-link', function (e) {\r\n                e.preventDefault();\r\n                var name = e.currentTarget.name;\r\n                var text = \":\" + name + \": \";\r\n                var selectionStart = textarea.selectionStart, selectionEnd = textarea.selectionEnd;\r\n                var end = selectionEnd + text.length;\r\n                var start = selectionStart === selectionEnd ? end : selectionStart;\r\n                controls_1.insertIntoTextarea(textarea, text);\r\n                controls_1.updateTextareaSelection(textarea, start, end);\r\n                $(textarea).trigger('input');\r\n            });\r\n            var buttonRect = $('[data-format=\"emoji-add-emoji\"]')[0].getBoundingClientRect();\r\n            var position = {\r\n                bottom: 'auto',\r\n                top: 'auto',\r\n                right: 'auto',\r\n                left: 'auto',\r\n            };\r\n            if (buttonRect.top > 440) {\r\n                position.top = buttonRect.top - 400 + \"px\";\r\n            }\r\n            else {\r\n                position.top = buttonRect.top + 40 + \"px\";\r\n            }\r\n            if (buttonRect.left < window.innerWidth / 2) {\r\n                position.left = buttonRect.left + 40 + \"px\";\r\n            }\r\n            else {\r\n                position.left = buttonRect.left - 400 + \"px\";\r\n            }\r\n            dialog.css(position);\r\n            dialogActions.open(dialog);\r\n        }\r\n        var dialog = $('#emoji-dialog');\r\n        if (dialog.length) {\r\n            after(dialog);\r\n        }\r\n        else {\r\n            init(after);\r\n        }\r\n    }\r\n    exports.openForInsert = openForInsert;\r\n});\r\n//# sourceMappingURL=emoji-dialog.js.map"]}